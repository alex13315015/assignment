server:
  port: 8094

spring:
  output:
    ansi:
      enabled: always
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true


  #### database ??
  datasource:
    driver-class-name: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521:xe
    username: springryan
    password: ryan

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

    database: oracle
    properties:
      hibernate:
        format_sql: true
        show-sql: true
        dialect: org.hibernate.dialect.Oracle12cDialect

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 236240561878-9pf58g8rgbkklm4ptcrc068nefnr4stk.apps.googleusercontent.com
            client-secret: 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
            scope:
              - profile
              - email

          naver:
            client-id: OWZZMXxMY7dbbCNMQiHm
            client-secret: okqeViyA8O
            scope:
              - nickname
              - email
              - profile
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8094/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

#### log ??  fatal > error > warn > info > debug
logging:
  level:
   org.hibernate.SQL: debug
   org.hibernate.type: trace #파라미터를 보여준다.

file:
  path: C:/upload/

pagination:
  size: 5


